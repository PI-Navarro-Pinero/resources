
//checkear la conexion TCP

public String readResponse(InputStream inStreamFromServer, int timeout) throws Exception {
    BufferedReader reader = new BufferedReader(new InputStreamReader(inStreamFromServer, Charsets.UTF_8));
    char[] buffer = new char[8092];
    boolean timeoutNotExceeded;
    StringBuilder result = new StringBuilder();
    final long startTime = System.nanoTime();
    while ((timeoutNotExceeded = (TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime) < timeout))) {
        if (reader.ready()) {
            int charsRead = reader.read(buffer);
            if (charsRead == -1) {
                break;
            }
            result.append(buffer, 0, charsRead);
        } else {
            try {
                Thread.sleep(timeout / 200);
            } catch (InterruptedException ex) {
                LOG.error("InterruptedException ex=", ex);
            }
        }
    }
    if (!timeoutNotExceeded) throw new SocketTimeoutException("Command timeout limit was exceeded: " + timeout);

    return result.toString();
}

//-------------- CÓDIGO CON SOCKETS --------------------------------//

 String direccionIP = "127.0.0.1";
 int puerto = 7777;

 Socket socket;

 String cmd = "";
 String linea = "";

 Scanner in;

 try {
     socket = new Socket(direccionIP, puerto);

     System.out.println("Conectado exitosamente a " + direccionIP);

     while (!cmd.equals("quit")) {
       //Muestra prompt y espera el input del usuario
       System.out.print("--) ");
       in = new Scanner(System.in);
       cmd = in.nextLine();

       //Para escribir en el socket (enviar comando)
       PrintWriter toConsole = new PrintWriter(socket.getOutputStream(), true);

       //Para leer el socket
       InputStreamReader input = new InputStreamReader(socket.getInputStream());
       BufferedReader fromConsole = new BufferedReader(input);

       //Envía el comando
       toConsole.println(cmd);

       //Espera una respuesta (que el resultado del comando se escriba
       //en el socket)
       while(!fromConsole.ready());

       //Mientras se pueda leer, que lo imprima
       while(fromConsole.ready())
       {
         linea = fromConsole.readLine();
         System.out.println(linea);
       }
     }
 } catch (UnknownHostException e) {
     System.out.println(e.getMessage());
 } catch (IOException e) {
     System.out.println(e.getMessage());
}
